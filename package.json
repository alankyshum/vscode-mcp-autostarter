{
  "name": "vscode-mcp-autostarter",
  "displayName": "MCP Auto-Starter",
  "description": "Automatically start and manage MCP (Model Context Protocol) servers in VSCode",
  "version": "0.1.0",
  "publisher": "alankyshum",
  "author": {
    "name": "Alan Shum",
    "email": "alan200994@gmail.com"
  },
  "license": "MIT",
  "homepage": "https://github.com/alankyshum/vscode-mcp-autostarter#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/alankyshum/vscode-mcp-autostarter.git"
  },
  "bugs": {
    "url": "https://github.com/alankyshum/vscode-mcp-autostarter/issues"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "keywords": [
    "mcp",
    "model context protocol",
    "auto-start",
    "server management",
    "automation",
    "development tools"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/src/extension.js",
  "contributes": {
    "views": {
      "explorer": [
        {
          "id": "mcpServers",
          "name": "MCP Servers",
          "when": "true"
        }
      ]
    },
    "commands": [
      {
        "command": "mcp-autostarter.toggleAutoStart",
        "title": "Toggle Auto-Start",
        "icon": "$(debug-start)"
      },
      {
        "command": "mcp-autostarter.startServer",
        "title": "Start Server",
        "icon": "$(play)"
      },
      {
        "command": "mcp-autostarter.stopServer",
        "title": "Stop Server",
        "icon": "$(stop)"
      },
      {
        "command": "mcp-autostarter.restartServer",
        "title": "Restart Server",
        "icon": "$(refresh)"
      },
      {
        "command": "mcp-autostarter.refreshView",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "mcp-autostarter.viewLogs",
        "title": "View Logs",
        "icon": "$(output)"
      },
      {
        "command": "mcp-autostarter.showServerDetails",
        "title": "Show Server Details",
        "icon": "$(info)"
      },
      {
        "command": "mcp-autostarter.addServer",
        "title": "Add Server",
        "icon": "$(add)"
      },
      {
        "command": "mcp-autostarter.editServer",
        "title": "Edit Server",
        "icon": "$(edit)"
      },
      {
        "command": "mcp-autostarter.removeServer",
        "title": "Remove Server",
        "icon": "$(trash)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "mcp-autostarter.refreshView",
          "when": "view == mcpServers",
          "group": "navigation"
        },
        {
          "command": "mcp-autostarter.addServer",
          "when": "view == mcpServers",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "mcp-autostarter.showServerDetails",
          "when": "view == mcpServers && viewItem == mcpServer",
          "group": "1_info"
        },
        {
          "command": "mcp-autostarter.toggleAutoStart",
          "when": "view == mcpServers && viewItem == mcpServer",
          "group": "2_control"
        },
        {
          "command": "mcp-autostarter.startServer",
          "when": "view == mcpServers && viewItem == mcpServer",
          "group": "2_control"
        },
        {
          "command": "mcp-autostarter.stopServer",
          "when": "view == mcpServers && viewItem == mcpServer",
          "group": "2_control"
        },
        {
          "command": "mcp-autostarter.restartServer",
          "when": "view == mcpServers && viewItem == mcpServer",
          "group": "2_control"
        },
        {
          "command": "mcp-autostarter.viewLogs",
          "when": "view == mcpServers && viewItem == mcpServer",
          "group": "3_logs"
        },
        {
          "command": "mcp-autostarter.editServer",
          "when": "view == mcpServers && viewItem == mcpServer",
          "group": "4_edit"
        },
        {
          "command": "mcp-autostarter.removeServer",
          "when": "view == mcpServers && viewItem == mcpServer",
          "group": "4_edit"
        }
      ]
    },
    "configuration": {
      "title": "MCP Auto-Starter",
      "properties": {
        "mcpAutoStarter.globalAutoStart": {
          "type": "boolean",
          "default": true,
          "description": "Enable global auto-start functionality"
        },
        "mcpAutoStarter.systemPrompt": {
          "type": "string",
          "default": "",
          "description": "Custom system prompt to inject into MCP chat sessions",
          "scope": "application"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "test:ci": "npm run compile && npm run lint && node ./out/test/runTest.js",
    "test:skip": "echo 'Skipping tests in CI environment'",
    "package": "vsce package",
    "publish": "vsce publish",
    "package:pre-release": "vsce package --pre-release",
    "publish:pre-release": "vsce publish --pre-release"
  },
  "dependencies": {},
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.0",
    "@types/node": "^16.18.0",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "@vscode/vsce": "^2.22.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.0",
    "mocha": "^10.0.0",
    "typescript": "^4.9.4"
  }
}
